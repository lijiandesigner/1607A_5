@model Model.Salary

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Salary</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MoneyId)
    
            <div class="form-group">
                @Html.LabelFor(model => model.StaffNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.StaffNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffNo, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.JobMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.JobMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobMoney, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PunishMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PunishMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PunishMoney, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.AwardMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.AwardMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AwardMoney, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.LeaveMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.LeaveMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeaveMoney, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.AllowMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.AllowMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AllowMoney, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.TrueMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.TrueMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TrueMoney, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="领取工资" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        <input id="Button1" type="button" value="财务列表" class="btn btn-default" onclick="location.href='/Salary/Index'" />
    </div>
</body>
</html>
